pipeline {
    agent any
    tools {nodejs "nodejs"}

    stages {
        stage('React Build') {
            steps {
                echo "React build start"
                sh 'pwd'
                sh 'npm install --force'
                sh 'CI=false npm run build'
            }
        }

        stage('Docker build') {
            steps {
                sh 'docker ps -f name=nginx-react-container -q | xargs --no-run-if-empty docker container stop'
                sh 'docker container ls -a -fname=nginx-react-container -q | xargs -r docker container rm'
                sh 'docker images -f nginx-react-image:latest | xargs --no-run-if-empty docker rmi'
                sh 'docker build -t nginx-react-image:latest .'
            }
        }

        stage('Docker run') {
            steps {
                
                sh 'docker images -qf dangling=true | xargs -I{} docker rmi {}' 
                sh 'docker run -d --name nginx-react-container -p 80:80 nginx-react-image:latest'
            }
        }
    }
    post{
        success {
            slackSend(
                channel: '#4-2_젠킨스_프론트엔드_빌드알림',
                color: 'good',
                message: '[Successful] Job:${env.JOB_NAME} - ${env.BUILD_URL}'
            )
        }
        failure{
            slackSend(
                channel: '#4-2_젠킨스_프론트엔드_빌드알림',
                color: 'danger',
                message: '[Failed] Job:${env.JOB_NAME} - ${env.BUILD_URL}'
            )
        }
    }

}